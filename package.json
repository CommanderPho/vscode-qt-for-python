{
  "name": "vscode-qt-for-python",
  "displayName": "Qt for Python",
  "description": "Visual Studio Code extension for PySide6.",
  "publisher": "seanwu",
  "version": "1.0.0",
  "license": "MIT",
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "test-compile": "tsc -p ./src",
    "test-watch": "tsc -watch -p ./src",
    "pretest": "npm run test-compile",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js",
    "prepare": "husky install"
  },
  "dependencies": {
    "rxjs": "^6.6.7",
    "yargs": "^16.2.0"
  },
  "devDependencies": {
    "@types/glob": "^7.1.3",
    "@types/mocha": "^8.0.4",
    "@types/node": "^12.11.7",
    "@types/vscode": "^1.55.0",
    "@types/yargs": "^16.0.1",
    "@typescript-eslint/eslint-plugin": "^4.14.1",
    "@typescript-eslint/parser": "^4.14.1",
    "eslint": "^7.19.0",
    "eslint-plugin-rxjs": "^3.1.5",
    "glob": "^7.1.6",
    "husky": "^6.0.0",
    "lint-staged": "^10.5.4",
    "mocha": "^8.2.1",
    "prettier": "^2.2.1",
    "ts-loader": "^8.0.14",
    "typescript": "^4.1.3",
    "vsce": "^1.87.1",
    "vscode-test": "^1.5.0",
    "webpack": "^5.19.0",
    "webpack-cli": "^4.4.0"
  },
  "engines": {
    "vscode": "^1.55.0"
  },
  "categories": [
    "Other"
  ],
  "main": "./dist/extension.js",
  "homepage": "https://github.com/seanwu1105/vscode-qt-for-python",
  "repository": {
    "type": "git",
    "url": "https://github.com/seanwu1105/vscode-qt-for-python.git"
  },
  "bugs": {
    "url": "https://github.com/seanwu1105/vscode-qt-for-python/issues",
    "email": "seanwu1105@gmail.com"
  },
  "badges": [
    {
      "url": "https://img.shields.io/visual-studio-marketplace/v/seanwu.vscode-qt-for-python.svg",
      "href": "https://marketplace.visualstudio.com/items?itemName=seanwu.vscode-qt-for-python",
      "description": "version"
    },
    {
      "url": "https://img.shields.io/visual-studio-marketplace/r/seanwu.vscode-qt-for-python.svg",
      "href": "https://marketplace.visualstudio.com/items?itemName=seanwu.vscode-qt-for-python",
      "description": "version"
    },
    {
      "url": "https://img.shields.io/visual-studio-marketplace/d/seanwu.vscode-qt-for-python.svg",
      "href": "https://marketplace.visualstudio.com/items?itemName=seanwu.vscode-qt-for-python",
      "description": "version"
    },
    {
      "url": "https://img.shields.io/visual-studio-marketplace/i/seanwu.vscode-qt-for-python.svg",
      "href": "https://marketplace.visualstudio.com/items?itemName=seanwu.vscode-qt-for-python",
      "description": "version"
    }
  ],
  "lint-staged": {
    "*.ts": "eslint --cache --fix",
    "*.{js,css,md}": "prettier --write"
  },
  "activationEvents": [
    "onCommand:qtForPython.newForm",
    "onCommand:qtForPython.editForm",
    "onCommand:qtForPython.compileForm",
    "workspaceContains:**/*.ui"
  ],
  "contributes": {
    "commands": [
      {
        "command": "qtForPython.newForm",
        "title": "New Form (Qt Designer UI File)",
        "category": "Qt for Python"
      },
      {
        "command": "qtForPython.editForm",
        "title": "Edit Form (Qt Designer UI File)",
        "category": "Qt for Python"
      },
      {
        "command": "qtForPython.compileForm",
        "title": "Compile Form (Qt Designer UI File) into Qt for Python File",
        "category": "Qt for Python"
      },
      {
        "command": "qtForPython.compileResource",
        "title": "Compile Resource File into Qt for Python File",
        "category": "Qt for Python"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "qtForPython.editForm",
          "when": "resourceExtname == .ui && resourceLangId == xml"
        },
        {
          "command": "qtForPython.compileForm",
          "when": "resourceExtname == .ui && resourceLangId == xml"
        },
        {
          "command": "qtForPython.compileResource",
          "when": "resourceExtname == .qrc && resourceLangId == xml"
        }
      ],
      "explorer/context": [
        {
          "command": "qtForPython.newForm",
          "when": "explorerResourceIsFolder == true",
          "group": "qtForPython"
        },
        {
          "command": "qtForPython.editForm",
          "when": "resourceExtname == .ui && resourceLangId == xml",
          "group": "qtForPython"
        },
        {
          "command": "qtForPython.compileForm",
          "when": "resourceExtname == .ui && resourceLangId == xml",
          "group": "qtForPython"
        },
        {
          "command": "qtForPython.compileResource",
          "when": "resourceExtname == .qrc && resourceLangId == xml",
          "group": "qtForPython"
        }
      ],
      "editor/title": [
        {
          "command": "qtForPython.editForm",
          "when": "resourceExtname == .ui && resourceLangId == xml",
          "group": "qtForPython"
        },
        {
          "command": "qtForPython.compileForm",
          "when": "resourceExtname == .ui && resourceLangId == xml",
          "group": "qtForPython"
        },
        {
          "command": "qtForPython.compileResource",
          "when": "resourceExtname == .qrc && resourceLangId == xml",
          "group": "qtForPython"
        }
      ],
      "editor/context": [
        {
          "command": "qtForPython.editForm",
          "when": "resourceExtname == .ui && resourceLangId == xml",
          "group": "qtForPython"
        },
        {
          "command": "qtForPython.compileForm",
          "when": "resourceExtname == .ui && resourceLangId == xml",
          "group": "qtForPython"
        },
        {
          "command": "qtForPython.compileResource",
          "when": "resourceExtname == .qrc && resourceLangId == xml",
          "group": "qtForPython"
        }
      ]
    },
    "configuration": {
      "title": "Qt for Python",
      "properties": {
        "qtForPython.designer.path": {
          "type": [
            "null",
            "string"
          ],
          "default": null,
          "markdownDescription": "The path of PySide6 Qt Designer without CLI options to create and edit form (`*.ui`) files. Set to `null` or empty string to automatically find from your Python site-packages directories. For examples, `/opt/Qt/6.0.0/gcc_64/bin/designer` in Linux."
        },
        "qtForPython.designer.args": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          },
          "markdownDescription": "Arguments passed in PySide 6 Qt Designer. Each argument is a separate item in the array. For example, `--enableinternaldynamicproperties`."
        },
        "qtForPython.uic.path": {
          "type": [
            "null",
            "string"
          ],
          "default": null,
          "markdownDescription": "The path of PySide6 UI compiler without CLI options. Set to `null` or empty string to automatically find from your Python site-packages directories. For example, `pyside6-uic` in Linux."
        },
        "qtForPython.uic.args": {
          "type": "array",
          "default": [
            "--generator python",
            "--output \"${workspaceFolder}${pathSeparator}.qt_for_python${pathSeparator}uic${pathSeparator}${fileBasenameNoExtension}.py\""
          ],
          "items": {
            "type": "string"
          },
          "markdownDescription": "Arguments passed in PySide 6 UI compiler. Each argument is a separate item in the array. For example, `--output ${file}`."
        },
        "qtForPython.uic.liveCompilation": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Automatically recompile Qt UI files when any `*.ui` file has changed or created."
        },
        "qtForPython.rcc.path": {
          "type": [
            "null",
            "string"
          ],
          "default": null,
          "markdownDescription": "The path of PySide6 Resource compiler without CLI options. Set to `null` or empty string to automatically find from your Python site-packages directories. For example, `pyside6-rcc` in Linux."
        },
        "qtForPython.rcc.args": {
          "type": "array",
          "default": [
            "--generator python",
            "--output \"${workspaceFolder}${pathSeparator}.qt_for_python${pathSeparator}rcc${pathSeparator}${fileBasenameNoExtension}.py\""
          ],
          "items": {
            "type": "string"
          },
          "markdownDescription": "Arguments passed in PySide 6 Resource compiler. Each argument is a separate item in the array. For example, `--output ${file}`."
        },
        "qtForPython.rcc.liveCompilation": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Automatically recompile Qt Resource files when any `*.qrc` file has changed or created."
        }
      }
    },
    "languages": [
      {
        "id": "qmake",
        "extensions": [
          ".pro",
          ".pri",
          ".prf",
          ".prl"
        ],
        "aliases": [
          "QMake",
          "qmake",
          "Qt Project"
        ],
        "configuration": "./languages/qmake-language-configuration.json"
      },
      {
        "id": "qml",
        "extensions": [
          ".qml"
        ],
        "aliases": [
          "QML",
          "qml"
        ],
        "configuration": "./languages/qml-language-configuration.json"
      },
      {
        "id": "qmldir",
        "filenames": [
          "qmldir"
        ],
        "aliases": [
          "QML Directory",
          "qmldir"
        ],
        "configuration": "./languages/qmldir-language-configuration.json"
      },
      {
        "id": "qss",
        "extensions": [
          ".qss"
        ],
        "aliases": [
          "QSS",
          "qss"
        ],
        "configuration": "./languages/qss-language-configuration.json"
      },
      {
        "id": "xml",
        "extensions": [
          ".qt.ts",
          ".ui",
          ".pro.user",
          ".qrc"
        ]
      }
    ],
    "grammars": [
      {
        "language": "qmake",
        "scopeName": "source.qmake",
        "path": "./syntaxes/qmake.tmLanguage.json"
      },
      {
        "language": "qml",
        "scopeName": "source.qml",
        "embeddedLanguages": {
          "meta.embedded.block.js": "javascript"
        },
        "path": "./syntaxes/qml.tmLanguage.json"
      },
      {
        "language": "qmldir",
        "scopeName": "source.qmldir",
        "path": "./syntaxes/qmldir.tmLanguage.json"
      },
      {
        "language": "qss",
        "scopeName": "source.qss",
        "path": "./syntaxes/qss.tmLanguage.json"
      }
    ],
    "snippets": [
      {
        "language": "qml",
        "path": "./snippets/qml.json"
      },
      {
        "language": "qmldir",
        "path": "./snippets/qmldir.json"
      },
      {
        "language": "qss",
        "path": "./snippets/qss.json"
      }
    ]
  }
}
